name: New release

on:
  push:
    tags:
      - 'v*'

jobs:
  github_release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    # outputs:
    #   upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get changelog
        id: get_changelog
        run: |
          current_tag="$(git describe --tags --abbrev=0)"
          previous_tag="$(git describe --abbrev=0 "${current_tag}^")"
          changelog="$(git log --pretty=format:"%h %s" "${previous_tag}"..HEAD)"
          echo -e "Prev tag:\n${previous_tag}\nChangelog:\n${changelog}" >&2
          # https://github.com/actions/toolkit/issues/403
          changelog="${changelog//'%'/'%25'}"
          changelog="${changelog//$'\n'/'%0A'}"
          changelog="${changelog//$'\r'/'%0D'}"
          echo "::set-output name=changelog::${changelog}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: ${{ steps.get_changelog.outputs.changelog }}

      # - name: Delete release if anything goes wrong.
      #   if: ${{ failure() }}
      #   uses: author/action-rollback@master
      #   with:
      #     release_id: ${{ steps.create_release.id }}
      #     tag: ${{ github.ref }}
      #     always_delete_tag: true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pypi_release:
    name: Create PyPi release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Build and publish
      env:
        PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
        PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        poetry publish --build --username "$PYPI_USERNAME" --password "$PYPI_PASSWORD"
